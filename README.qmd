---
title: Netlify Deploy Pre-rendered Site
format: gfm
---

```{r}
#| include: false
library(tidyverse)
action <- yaml::read_yaml("action.yml")
```

`r action$description`

## Usage

```yaml
- name: Deploy to Netlify ðŸš€
  uses: data-intuitive/netlify-deploy-action@v1
  with:
    auth: ${{ secrets.NETLIFY_AUTH_TOKEN }}
    site: 'my-netlify-site'
    dir: '_site'
    prod: true
    message: 'Deploy production ${{ github.ref }}'
```

## Inputs

```{r}
#| echo: false
lines <- map_chr(names(action$inputs), function(name) {
  input <- action$inputs[[name]]
  required <- ifelse (input$required %||% FALSE, "required", "optional")
  glue::glue("* `{name}` (_{required}_): {input$description}")
})
knitr::asis_output(paste0(lines, collapse = "\n"))
```

## Outputs

```{r}
#| echo: false
lines <- map_chr(names(action$outputs), function(name) {
  output <- action$outputs[[name]]
  glue::glue("* `{name}`: {output$description}")
})
knitr::asis_output(paste0(lines, collapse = "\n"))
```

## Example with Quarto

This example action will run `quarto render` on a project and then publish the site on Netlify. Remove the part about Quarto if not relevant or using a different builder.

```yaml
on:
  push:
    branches: [ main, master ]
  pull_request:

name: Render project

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2
      
      - name: Render Quarto Project
        uses: quarto-dev/quarto-actions/render@v2

      - name: Deploy to Netlify ðŸš€
        if: github.event_name != 'pull_request'
        uses: data-intuitive/netlify-deploy-action@v1
        with:
          auth: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          dir: '_site'
          site: 'my-netlify-site'
          prod: true
          message: 'Deploy production ${{ github.ref }}'

      - name: Deploy preview
        id: deploy_preview
        if: github.event_name == 'pull_request'
        uses: data-intuitive/netlify-deploy-action@v1
        with:
          auth: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          dir: '_site'
          site: 'my-netlify-site'
          alias: "${{ env.BRANCH_NAME }}"
          message: 'Deploy prooduction ${{ github.ref }}'

      - uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            [![Deploy: success](https://img.shields.io/badge/Deploy-success-success)](${{ steps.deploy_preview.outputs.deploy-url }})
          comment_tag: deploy_status

      - uses: thollander/actions-comment-pull-request@v2
        if: github.event_name == 'pull_request' && failure()
        with:
          message: |
            [![Deploy: failure](https://img.shields.io/badge/Deploy-failure-critical)]${{ steps.deploy_preview.outputs.logs }})
          comment_tag: deploy_status
```